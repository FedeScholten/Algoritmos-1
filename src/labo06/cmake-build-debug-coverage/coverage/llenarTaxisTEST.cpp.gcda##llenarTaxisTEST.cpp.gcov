        -:    0:Source:/home/jotavecorta/proyectos/algoritmos_1/src/labo06/ej2/Test/llenarTaxisTEST.cpp
        -:    0:Graph:/home/jotavecorta/proyectos/algoritmos_1/src/labo06/cmake-build-debug-coverage/CMakeFiles/LaboTesting.dir/ej2/Test/llenarTaxisTEST.cpp.gcno
        -:    0:Data:/home/jotavecorta/proyectos/algoritmos_1/src/labo06/cmake-build-debug-coverage/CMakeFiles/LaboTesting.dir/ej2/Test/llenarTaxisTEST.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "../llenarTaxis.h"
        -:    2:#include "gtest/gtest.h"
        -:    3:
        -:    4:/* Test-Suit para la primera versión */
        2:    5:TEST(LlenarTaxis1Test, TodosGruposIguales){
        -:    6:    // Setup
        1:    7:    int g1 = 2;
        1:    8:    int g2 = 2;
        1:    9:    int g3 = 2;
        -:   10:
        -:   11:    // Excercise
        1:   12:    int result = llenarTaxis1(g1, g2, g3);
        -:   13:
        -:   14:    // Check
        1:   15:    EXPECT_EQ(result, 3);
        1:   16:}
------------------
_ZN40LlenarTaxis1Test_TodosGruposIguales_Test8TestBodyEv:
function _ZN40LlenarTaxis1Test_TodosGruposIguales_Test8TestBodyEv called 1 returned 100% blocks executed 56%
        1:    5:TEST(LlenarTaxis1Test, TodosGruposIguales){
        -:    6:    // Setup
        1:    7:    int g1 = 2;
        1:    8:    int g2 = 2;
        1:    9:    int g3 = 2;
        -:   10:
        -:   11:    // Excercise
        1:   12:    int result = llenarTaxis1(g1, g2, g3);
        1:   12-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   13:
        -:   14:    // Check
        1:   15:    EXPECT_EQ(result, 3);
        1:   15-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   15-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        1:   15-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   15-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   15-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   15-block  5
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:   15-block  6
call   18 returned 1
call   19 returned 1
        1:   15-block  7
call   20 returned 1
    $$$$$:   15-block  8
    $$$$$:   15-block  9
call   21 never executed
    $$$$$:   15-block 10
    $$$$$:   15-block 11
call   22 never executed
    $$$$$:   15-block 12
    $$$$$:   15-block 13
call   23 never executed
        1:   16:}
------------------
_ZN40LlenarTaxis1Test_TodosGruposIguales_TestC2Ev:
function _ZN40LlenarTaxis1Test_TodosGruposIguales_TestC2Ev called 1 returned 100% blocks executed 100%
        1:    5:TEST(LlenarTaxis1Test, TodosGruposIguales){
        1:    5-block  0
call    0 returned 1
------------------
        -:   17:
        2:   18:TEST(LlenarTaxis1Test, g2ImparYDiferenciaIgual){
        -:   19:    // Setup
        1:   20:    int g1 = 1;
        1:   21:    int g2 = 1;
        1:   22:    int g3 = 2;
        -:   23:
        -:   24:    // Excercise
        1:   25:    int result = llenarTaxis1(g1, g2, g3);
        -:   26:
        -:   27:    // Check
        1:   28:    EXPECT_EQ(result, 2);
        1:   29:}
------------------
_ZN45LlenarTaxis1Test_g2ImparYDiferenciaIgual_Test8TestBodyEv:
function _ZN45LlenarTaxis1Test_g2ImparYDiferenciaIgual_Test8TestBodyEv called 1 returned 100% blocks executed 56%
        1:   18:TEST(LlenarTaxis1Test, g2ImparYDiferenciaIgual){
        -:   19:    // Setup
        1:   20:    int g1 = 1;
        1:   21:    int g2 = 1;
        1:   22:    int g3 = 2;
        -:   23:
        -:   24:    // Excercise
        1:   25:    int result = llenarTaxis1(g1, g2, g3);
        1:   25-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   26:
        -:   27:    // Check
        1:   28:    EXPECT_EQ(result, 2);
        1:   28-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   28-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        1:   28-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   28-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   28-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   28-block  5
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:   28-block  6
call   18 returned 1
call   19 returned 1
        1:   28-block  7
call   20 returned 1
    $$$$$:   28-block  8
    $$$$$:   28-block  9
call   21 never executed
    $$$$$:   28-block 10
    $$$$$:   28-block 11
call   22 never executed
    $$$$$:   28-block 12
    $$$$$:   28-block 13
call   23 never executed
        1:   29:}
------------------
_ZN45LlenarTaxis1Test_g2ImparYDiferenciaIgual_TestC2Ev:
function _ZN45LlenarTaxis1Test_g2ImparYDiferenciaIgual_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   18:TEST(LlenarTaxis1Test, g2ImparYDiferenciaIgual){
        1:   18-block  0
call    0 returned 1
------------------
        -:   30:
        2:   31:TEST(LlenarTaxis1Test, g2ImparYDiferenciaDistinta){
        -:   32:    // Setup
        1:   33:    int g1 = 4;
        1:   34:    int g2 = 1;
        1:   35:    int g3 = 1;
        -:   36:
        -:   37:    // Excercise
        1:   38:    int result = llenarTaxis1(g1, g2, g3);
        -:   39:
        -:   40:    // Check
       1*:   41:    EXPECT_EQ(result, 3);
        1:   42:}
------------------
_ZN48LlenarTaxis1Test_g2ImparYDiferenciaDistinta_Test8TestBodyEv:
function _ZN48LlenarTaxis1Test_g2ImparYDiferenciaDistinta_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:   31:TEST(LlenarTaxis1Test, g2ImparYDiferenciaDistinta){
        -:   32:    // Setup
        1:   33:    int g1 = 4;
        1:   34:    int g2 = 1;
        1:   35:    int g3 = 1;
        -:   36:
        -:   37:    // Excercise
        1:   38:    int result = llenarTaxis1(g1, g2, g3);
        1:   38-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   39:
        -:   40:    // Check
       1*:   41:    EXPECT_EQ(result, 3);
        1:   41-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   41-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   41-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   41-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   41-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   41-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   41-block  6
call   18 never executed
call   19 never executed
        1:   41-block  7
call   20 returned 1
    $$$$$:   41-block  8
    $$$$$:   41-block  9
call   21 never executed
    $$$$$:   41-block 10
    $$$$$:   41-block 11
call   22 never executed
    $$$$$:   41-block 12
    $$$$$:   41-block 13
call   23 never executed
        1:   42:}
------------------
_ZN48LlenarTaxis1Test_g2ImparYDiferenciaDistinta_TestC2Ev:
function _ZN48LlenarTaxis1Test_g2ImparYDiferenciaDistinta_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   31:TEST(LlenarTaxis1Test, g2ImparYDiferenciaDistinta){
        1:   31-block  0
call    0 returned 1
------------------
        -:   43:
        -:   44:/* Test-Suit para la segunda versión */
        2:   45:TEST(LlenarTaxis2Test, TodosGruposIguales){
        -:   46:    // Setup
        1:   47:    int g1 = 2;
        1:   48:    int g2 = 2;
        1:   49:    int g3 = 2;
        -:   50:
        -:   51:    // Excercise
        1:   52:    int result = llenarTaxis2(g1, g2, g3);
        -:   53:
        -:   54:    // Check
       1*:   55:    EXPECT_EQ(result, 3);
        1:   56:}
------------------
_ZN40LlenarTaxis2Test_TodosGruposIguales_Test8TestBodyEv:
function _ZN40LlenarTaxis2Test_TodosGruposIguales_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:   45:TEST(LlenarTaxis2Test, TodosGruposIguales){
        -:   46:    // Setup
        1:   47:    int g1 = 2;
        1:   48:    int g2 = 2;
        1:   49:    int g3 = 2;
        -:   50:
        -:   51:    // Excercise
        1:   52:    int result = llenarTaxis2(g1, g2, g3);
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   53:
        -:   54:    // Check
       1*:   55:    EXPECT_EQ(result, 3);
        1:   55-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   55-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   55-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   55-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   55-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   55-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   55-block  6
call   18 never executed
call   19 never executed
        1:   55-block  7
call   20 returned 1
    $$$$$:   55-block  8
    $$$$$:   55-block  9
call   21 never executed
    $$$$$:   55-block 10
    $$$$$:   55-block 11
call   22 never executed
    $$$$$:   55-block 12
    $$$$$:   55-block 13
call   23 never executed
        1:   56:}
------------------
_ZN40LlenarTaxis2Test_TodosGruposIguales_TestC2Ev:
function _ZN40LlenarTaxis2Test_TodosGruposIguales_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   45:TEST(LlenarTaxis2Test, TodosGruposIguales){
        1:   45-block  0
call    0 returned 1
------------------
        -:   57:
        2:   58:TEST(LlenarTaxis2Test, g2ImparYDiferenciaIgual){
        -:   59:    // Setup
        1:   60:    int g1 = 1;
        1:   61:    int g2 = 1;
        1:   62:    int g3 = 2;
        -:   63:
        -:   64:    // Excercise
        1:   65:    int result = llenarTaxis2(g1, g2, g3);
        -:   66:
        -:   67:    // Check
        1:   68:    EXPECT_EQ(result, 2);
        1:   69:}
------------------
_ZN45LlenarTaxis2Test_g2ImparYDiferenciaIgual_Test8TestBodyEv:
function _ZN45LlenarTaxis2Test_g2ImparYDiferenciaIgual_Test8TestBodyEv called 1 returned 100% blocks executed 56%
        1:   58:TEST(LlenarTaxis2Test, g2ImparYDiferenciaIgual){
        -:   59:    // Setup
        1:   60:    int g1 = 1;
        1:   61:    int g2 = 1;
        1:   62:    int g3 = 2;
        -:   63:
        -:   64:    // Excercise
        1:   65:    int result = llenarTaxis2(g1, g2, g3);
        1:   65-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   66:
        -:   67:    // Check
        1:   68:    EXPECT_EQ(result, 2);
        1:   68-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   68-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        1:   68-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   68-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   68-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   68-block  5
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:   68-block  6
call   18 returned 1
call   19 returned 1
        1:   68-block  7
call   20 returned 1
    $$$$$:   68-block  8
    $$$$$:   68-block  9
call   21 never executed
    $$$$$:   68-block 10
    $$$$$:   68-block 11
call   22 never executed
    $$$$$:   68-block 12
    $$$$$:   68-block 13
call   23 never executed
        1:   69:}
------------------
_ZN45LlenarTaxis2Test_g2ImparYDiferenciaIgual_TestC2Ev:
function _ZN45LlenarTaxis2Test_g2ImparYDiferenciaIgual_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   58:TEST(LlenarTaxis2Test, g2ImparYDiferenciaIgual){
        1:   58-block  0
call    0 returned 1
------------------
        -:   70:
        2:   71:TEST(LlenarTaxis2Test, g2ImparYDiferenciaDistinta){
        -:   72:    // Setup
        1:   73:    int g1 = 4;
        1:   74:    int g2 = 1;
        1:   75:    int g3 = 1;
        -:   76:
        -:   77:    // Excercise
        1:   78:    int result = llenarTaxis2(g1, g2, g3);
        -:   79:
        -:   80:    // Check
       1*:   81:    EXPECT_EQ(result, 3);
        1:   82:}
------------------
_ZN48LlenarTaxis2Test_g2ImparYDiferenciaDistinta_Test8TestBodyEv:
function _ZN48LlenarTaxis2Test_g2ImparYDiferenciaDistinta_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:   71:TEST(LlenarTaxis2Test, g2ImparYDiferenciaDistinta){
        -:   72:    // Setup
        1:   73:    int g1 = 4;
        1:   74:    int g2 = 1;
        1:   75:    int g3 = 1;
        -:   76:
        -:   77:    // Excercise
        1:   78:    int result = llenarTaxis2(g1, g2, g3);
        1:   78-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   79:
        -:   80:    // Check
       1*:   81:    EXPECT_EQ(result, 3);
        1:   81-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   81-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   81-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   81-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   81-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   81-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   81-block  6
call   18 never executed
call   19 never executed
        1:   81-block  7
call   20 returned 1
    $$$$$:   81-block  8
    $$$$$:   81-block  9
call   21 never executed
    $$$$$:   81-block 10
    $$$$$:   81-block 11
call   22 never executed
    $$$$$:   81-block 12
    $$$$$:   81-block 13
call   23 never executed
        1:   82:}
------------------
_ZN48LlenarTaxis2Test_g2ImparYDiferenciaDistinta_TestC2Ev:
function _ZN48LlenarTaxis2Test_g2ImparYDiferenciaDistinta_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   71:TEST(LlenarTaxis2Test, g2ImparYDiferenciaDistinta){
        1:   71-block  0
call    0 returned 1
------------------
        -:   83:
        -:   84:/* Test-Suit para la tercera versión */
        2:   85:TEST(LlenarTaxis3Test, TodosGruposIguales){
        -:   86:    // Setup
        1:   87:    int g1 = 2;
        1:   88:    int g2 = 2;
        1:   89:    int g3 = 2;
        -:   90:
        -:   91:    // Excercise
        1:   92:    int result = llenarTaxis3(g1, g2, g3);
        -:   93:
        -:   94:    // Check
       1*:   95:    EXPECT_EQ(result, 3);
        1:   96:}
------------------
_ZN40LlenarTaxis3Test_TodosGruposIguales_Test8TestBodyEv:
function _ZN40LlenarTaxis3Test_TodosGruposIguales_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:   85:TEST(LlenarTaxis3Test, TodosGruposIguales){
        -:   86:    // Setup
        1:   87:    int g1 = 2;
        1:   88:    int g2 = 2;
        1:   89:    int g3 = 2;
        -:   90:
        -:   91:    // Excercise
        1:   92:    int result = llenarTaxis3(g1, g2, g3);
        1:   92-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   93:
        -:   94:    // Check
       1*:   95:    EXPECT_EQ(result, 3);
        1:   95-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   95-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   95-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   95-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   95-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   95-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   95-block  6
call   18 never executed
call   19 never executed
        1:   95-block  7
call   20 returned 1
    $$$$$:   95-block  8
    $$$$$:   95-block  9
call   21 never executed
    $$$$$:   95-block 10
    $$$$$:   95-block 11
call   22 never executed
    $$$$$:   95-block 12
    $$$$$:   95-block 13
call   23 never executed
        1:   96:}
------------------
_ZN40LlenarTaxis3Test_TodosGruposIguales_TestC2Ev:
function _ZN40LlenarTaxis3Test_TodosGruposIguales_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   85:TEST(LlenarTaxis3Test, TodosGruposIguales){
        1:   85-block  0
call    0 returned 1
------------------
        -:   97:
        2:   98:TEST(LlenarTaxis3Test, g2ImparYDiferenciaIgual){
        -:   99:    // Setup
        1:  100:    int g1 = 1;
        1:  101:    int g2 = 1;
        1:  102:    int g3 = 2;
        -:  103:
        -:  104:    // Excercise
        1:  105:    int result = llenarTaxis3(g1, g2, g3);
        -:  106:
        -:  107:    // Check
       1*:  108:    EXPECT_EQ(result, 2);
        1:  109:}
------------------
_ZN45LlenarTaxis3Test_g2ImparYDiferenciaIgual_Test8TestBodyEv:
function _ZN45LlenarTaxis3Test_g2ImparYDiferenciaIgual_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:   98:TEST(LlenarTaxis3Test, g2ImparYDiferenciaIgual){
        -:   99:    // Setup
        1:  100:    int g1 = 1;
        1:  101:    int g2 = 1;
        1:  102:    int g3 = 2;
        -:  103:
        -:  104:    // Excercise
        1:  105:    int result = llenarTaxis3(g1, g2, g3);
        1:  105-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  106:
        -:  107:    // Check
       1*:  108:    EXPECT_EQ(result, 2);
        1:  108-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  108-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:  108-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  108-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  108-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  108-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:  108-block  6
call   18 never executed
call   19 never executed
        1:  108-block  7
call   20 returned 1
    $$$$$:  108-block  8
    $$$$$:  108-block  9
call   21 never executed
    $$$$$:  108-block 10
    $$$$$:  108-block 11
call   22 never executed
    $$$$$:  108-block 12
    $$$$$:  108-block 13
call   23 never executed
        1:  109:}
------------------
_ZN45LlenarTaxis3Test_g2ImparYDiferenciaIgual_TestC2Ev:
function _ZN45LlenarTaxis3Test_g2ImparYDiferenciaIgual_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   98:TEST(LlenarTaxis3Test, g2ImparYDiferenciaIgual){
        1:   98-block  0
call    0 returned 1
------------------
        -:  110:
        2:  111:TEST(LlenarTaxis3Test, g2ImparYDiferenciaDistinta){
        -:  112:    // Setup
        1:  113:    int g1 = 4;
        1:  114:    int g2 = 1;
        1:  115:    int g3 = 1;
        -:  116:
        -:  117:    // Excercise
        1:  118:    int result = llenarTaxis3(g1, g2, g3);
        -:  119:
        -:  120:    // Check
        1:  121:    EXPECT_EQ(result, 3);
        1:  122:}
------------------
_ZN48LlenarTaxis3Test_g2ImparYDiferenciaDistinta_Test8TestBodyEv:
function _ZN48LlenarTaxis3Test_g2ImparYDiferenciaDistinta_Test8TestBodyEv called 1 returned 100% blocks executed 56%
        1:  111:TEST(LlenarTaxis3Test, g2ImparYDiferenciaDistinta){
        -:  112:    // Setup
        1:  113:    int g1 = 4;
        1:  114:    int g2 = 1;
        1:  115:    int g3 = 1;
        -:  116:
        -:  117:    // Excercise
        1:  118:    int result = llenarTaxis3(g1, g2, g3);
        1:  118-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  119:
        -:  120:    // Check
        1:  121:    EXPECT_EQ(result, 3);
        1:  121-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  121-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        1:  121-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  121-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  121-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  121-block  5
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  121-block  6
call   18 returned 1
call   19 returned 1
        1:  121-block  7
call   20 returned 1
    $$$$$:  121-block  8
    $$$$$:  121-block  9
call   21 never executed
    $$$$$:  121-block 10
    $$$$$:  121-block 11
call   22 never executed
    $$$$$:  121-block 12
    $$$$$:  121-block 13
call   23 never executed
        1:  122:}
------------------
_ZN48LlenarTaxis3Test_g2ImparYDiferenciaDistinta_TestC2Ev:
function _ZN48LlenarTaxis3Test_g2ImparYDiferenciaDistinta_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  111:TEST(LlenarTaxis3Test, g2ImparYDiferenciaDistinta){
        1:  111-block  0
call    0 returned 1
------------------
